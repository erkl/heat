package heat

import (
	"bytes"
)

var lowcase = [256]byte{
	0x00, 0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07, // . . . . . . . .
	0x08, 0x09, 0x0a, 0x0b, 0x0c, 0x0d, 0x0e, 0x0f, // . . . . . . . .
	0x10, 0x11, 0x12, 0x13, 0x14, 0x15, 0x16, 0x17, // . . . . . . . .
	0x18, 0x19, 0x1a, 0x1b, 0x1c, 0x1d, 0x1e, 0x1f, // . . . . . . . .
	0x20, 0x21, 0x22, 0x23, 0x24, 0x25, 0x26, 0x27, // . . . . . . . .
	0x28, 0x29, 0x2a, 0x2b, 0x2c, 0x2d, 0x2e, 0x2f, // . . . . . . . .
	0x30, 0x31, 0x32, 0x33, 0x34, 0x35, 0x36, 0x37, // . . . . . . . .
	0x38, 0x39, 0x3a, 0x3b, 0x3c, 0x3d, 0x3e, 0x3f, // . . . . . . . .
	0x40, 0x61, 0x62, 0x63, 0x64, 0x65, 0x66, 0x67, // . A B C D E F G
	0x68, 0x69, 0x6a, 0x6b, 0x6c, 0x6d, 0x6e, 0x6f, // H I J K L M N O
	0x70, 0x71, 0x72, 0x73, 0x74, 0x75, 0x76, 0x77, // P Q R S T U V W
	0x78, 0x79, 0x7a, 0x5b, 0x5c, 0x5d, 0x5e, 0x5f, // X Y Z . . . . .
	0x60, 0x61, 0x62, 0x63, 0x64, 0x65, 0x66, 0x67, // . a b c d e f g
	0x68, 0x69, 0x6a, 0x6b, 0x6c, 0x6d, 0x6e, 0x6f, // h i j k l m n o
	0x70, 0x71, 0x72, 0x73, 0x74, 0x75, 0x76, 0x77, // p q r s t u v w
	0x78, 0x79, 0x7a, 0x7b, 0x7c, 0x7d, 0x7e, 0x7f, // x y z . . . . .
	0x80, 0x81, 0x82, 0x83, 0x84, 0x85, 0x86, 0x87, // . . . . . . . .
	0x88, 0x89, 0x8a, 0x8b, 0x8c, 0x8d, 0x8e, 0x8f, // . . . . . . . .
	0x90, 0x91, 0x92, 0x93, 0x94, 0x95, 0x96, 0x97, // . . . . . . . .
	0x98, 0x99, 0x9a, 0x9b, 0x9c, 0x9d, 0x9e, 0x9f, // . . . . . . . .
	0xa0, 0xa1, 0xa2, 0xa3, 0xa4, 0xa5, 0xa6, 0xa7, // . . . . . . . .
	0xa8, 0xa9, 0xaa, 0xab, 0xac, 0xad, 0xae, 0xaf, // . . . . . . . .
	0xb0, 0xb1, 0xb2, 0xb3, 0xb4, 0xb5, 0xb6, 0xb7, // . . . . . . . .
	0xb8, 0xb9, 0xba, 0xbb, 0xbc, 0xbd, 0xbe, 0xbf, // . . . . . . . .
	0xc0, 0xc1, 0xc2, 0xc3, 0xc4, 0xc5, 0xc6, 0xc7, // . . . . . . . .
	0xc8, 0xc9, 0xca, 0xcb, 0xcc, 0xcd, 0xce, 0xcf, // . . . . . . . .
	0xd0, 0xd1, 0xd2, 0xd3, 0xd4, 0xd5, 0xd6, 0xd7, // . . . . . . . .
	0xd8, 0xd9, 0xda, 0xdb, 0xdc, 0xdd, 0xde, 0xdf, // . . . . . . . .
	0xe0, 0xe1, 0xe2, 0xe3, 0xe4, 0xe5, 0xe6, 0xe7, // . . . . . . . .
	0xe8, 0xe9, 0xea, 0xeb, 0xec, 0xed, 0xee, 0xef, // . . . . . . . .
	0xf0, 0xf1, 0xf2, 0xf3, 0xf4, 0xf5, 0xf6, 0xf7, // . . . . . . . .
	0xf8, 0xf9, 0xfa, 0xfb, 0xfc, 0xfd, 0xfe, 0xff, // . . . . . . . .
}

func strcaseeq(a, b string) bool {
	if len(a) != len(b) {
		return false
	}

	for i := 0; i < len(a); i++ {
		if lowcase[a[i]] != lowcase[b[i]] {
			return false
		}
	}

	return true
}

func strtrim(s string) string {
	var l, r = 0, len(s) - 1

	for l < r && (s[l] == ' ' || s[l] == '\t') {
		l++
	}
	for l < r && (s[r] == ' ' || s[r] == '\t') {
		r--
	}

	return s[l : r+1]
}

func strtok(buf []byte, sep byte) (tok, rest []byte) {
	if i := bytes.IndexByte(buf, sep); i >= 0 {
		return buf[:i], buf[i+1:]
	} else {
		return buf, nil
	}
}

var common = make(map[string]string)

func init() {
	l := []string{
		// HTTP request methods.
		"GET",
		"HEAD",
		"POST",
		"PUT",
		"DELETE",
		"TRACE",
		"OPTIONS",
		"CONNECT",
		"PATCH",

		// Standardized and/or common HTTP header field names taken from
		// https://en.wikipedia.org/wiki/List_of_HTTP_header_fields.
		"Accept",
		"Accept-Charset",
		"Accept-Datetime",
		"Accept-Encoding",
		"Accept-Language",
		"Accept-Patch",
		"Accept-Ranges",
		"Access-Control-Allow-Origin",
		"Age",
		"Allow",
		"Authorization",
		"Cache-Control",
		"Connection",
		"Content-Disposition",
		"Content-Encoding",
		"Content-Language",
		"Content-Length",
		"Content-Location",
		"Content-MD5",
		"Content-Range",
		"Content-Security-Policy",
		"Content-Type",
		"Cookie",
		"Date",
		"DNT",
		"ETag",
		"Expect",
		"Expires",
		"From",
		"Front-End-Https",
		"Host",
		"If-Match",
		"If-Modified-Since",
		"If-None-Match",
		"If-Range",
		"If-Unmodified-Since",
		"Last-Modified",
		"Link",
		"Location",
		"Max-Forwards",
		"Origin",
		"P3P",
		"Pragma",
		"Proxy-Authenticate",
		"Proxy-Authorization",
		"Proxy-Connection",
		"Public-Key-Pins",
		"Range",
		"Referer",
		"Refresh",
		"Retry-After",
		"Server",
		"Set-Cookie",
		"Status",
		"Strict-Transport-Security",
		"TE",
		"Trailer",
		"Transfer-Encoding",
		"Upgrade",
		"User-Agent",
		"Vary",
		"Via",
		"Warning",
		"WWW-Authenticate",
		"X-ATT-DeviceId",
		"X-Content-Duration",
		"X-Content-Security-Policy",
		"X-Content-Type-Options",
		"X-Csrf-Token",
		"X-Forwarded-For",
		"X-Forwarded-Host",
		"X-Forwarded-Proto",
		"X-Frame-Options",
		"X-Http-Method-Override",
		"X-Powered-By",
		"X-Requested-With",
		"X-UA-Compatible",
		"X-UIDH",
		"X-Wap-Profile",
		"X-WebKit-CSP",
		"X-XSS-Protection",

		// Common HTTP header field values.
		"0",          // Content-Length
		"chunked",    // Transfer-Encoding
		"close",      // Connection
		"keep-alive", // Connection
	}

	for _, s := range l {
		common[s] = s
	}

	for _, s := range reasonPhrases {
		common[s] = s
	}
}

func stringify(raw []byte) string {
	// The compiler is clever enough not to allocate a string for this
	// map lookup.
	if s, ok := common[string(raw)]; ok {
		return s
	}
	return string(raw)
}
